ml purge

host=`hostname`
if [[ $host == "ilgn01" ]]; then

  echo "=== on T4 ==="
  ml purge
  ml sys/intelmpi

  export CXX=mpiicpx
  export OPT="-qopt-report=max -qopenmp -O3 -xsapphirerapids -qopt-zmm-usage=high -Wno-unknown-pragmas"
  export OPT="-parallel-source-info=2  -g -qopt-zmm-usage=high -xsapphirerapids -O3 -qopenmp -Wno-unknown-pragmas"
  export OPT="-qopenmp -O3 -xsapphirerapids -qopt-zmm-usage=high -Wno-unknown-pragmas"
  export LIBS="-qopenmp -O3 -xsapphirerapids"

elif [[ $host == "quantum."* ]]; then

  echo "==== on Quantum"
  ml purge
  ml nvhpc-hpcx

  export CXX=mpic++
  export OPT="-O3 -acc=gpu -Minfo=accel -gpu=managed,cc70"
  export LIBS="-Wl,-rpath -Wl,{NVHPC_ROOT}/comm_libs/nccl/lib -Wl,-rpath -Wl,{NVHPC_ROOT}/cuda/lib64 -L${NVHPC_ROOT}/comm_libs/nccl/lib -lnccl -L${NVHPC_ROOT}/cuda/lib64 -lcudart ${OPT}"

elif [[ $host == *"twcc.ai" ]]; then

  echo "==== on TWCC"
  #module load miniconda3
  #conda activate /opt/ohpc/pkg/kagra/ENV/py37
  module purge
  source /opt/ohpc/pkg/kagra/nv/openmpi-4.1.4/env.sh
  
  export CXX=mpic++
  export GSL_ROOT=/opt/ohpc/pkg/kagra/nv/gsl-2.7.1
  export OPT="-acc=gpu -O3 -Minfo=acc -gpu=managed"


elif [[ $host == "lgn"* ]]; then

  echo "==== on Twnia-3"
  module purge
  #module load libs/GSL/2.6
  #module load compiler/intel/2022 IntelMPI/2021.6
  source  /opt/ohpc/Taiwania3/pkg/intel/2024/oneapi/setvars.sh

  unset CFLAGS
  export CXX=mpiicpx
  export OPT="-g -qopt-report=3 -qopenmp -O3 -xCASCADELAKE -qopt-zmm-usage=high -std=c++14 -Wno-unknown-pragmas"
  export LIBS="-qopenmp -O3 -xCASCADELAKE"

elif [[ $host == "node"[12] ]]; then

  echo "==== on N1 A100"
  module purge
  module load nvhpc-hpcx

  export CXX=mpic++
  export OPT="-mp -O4 -Minfo=mp"
  export OPT="-O3 -acc=gpu -Minfo=acc -gpu=managed,cc80"
  export LIBS="-Wl,-rpath -Wl,{NVHPC_ROOT}/comm_libs/nccl/lib -Wl,-rpath -Wl,{NVHPC_ROOT}/cuda/lib64 -L${NVHPC_ROOT}/comm_libs/nccl/lib -lnccl -L${NVHPC_ROOT}/cuda/lib64 -lcudart ${OPT}"

else
  echo "==== on ARM"
  module load python/3.8.5
  module load acfl/22.0.1 armpl/22.0.1
  #module load gcc9/papi/6.0
  #export PAPI_MULTIPLEX=1

  export CXX=armclang++
  export OPT="-Ofast -std=c++11 -fopenmp"
  export OPT="-Ofast -std=c++11 -fopenmp -DIM_SIMPSON -fsave-optimization-record"
  export OPT="-Ofast -std=c++11 -fopenmp -armpl -DIM_SIMPSON"
  ## -DADVEC_OFF"

fi

make -j